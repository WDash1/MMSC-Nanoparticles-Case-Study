##  @brief      This file defines the DistributionDataVisualiser class.

import pylab
from DistributionDataProcessor import DistributionDataProcessor

##  @brief  This class provides utilities designed to assist in the production
#           of graphs from the data produced by numerical simulations of the
#           nanoparticle PDE model. In order to encapsulate the raw data from
#           simulations into a suitable form, please see the 
#           DistributionDataProcessor::DistributionDataProcessor class.
class DistributionDataVisualiser:
    
    ## @brief                   The constructor for this class.
    #  @param x_label           This parameter must be a string and dictates
    #                           the labels that will be used on the horizontal
    #                           axis of all graphs produced by the 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraph
    #                           and 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraphAll
    #                           methods of this class.
    #  @param y_label           This parameter must be a string and dictates
    #                           the labels that will be used on the vertical
    #                           axis of all graphs produced by the 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraph
    #                           and
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraphAll
    #                           methods of this class.
    #  @param key_strings       This parameter should be an array of strings
    #                           that dictate the descriptions shown for each
    #                           data set, in the legend of the graphs generated
    #                           by the 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraphAll, 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMeanTimeGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportVarianceTimeGraph
    #                           and
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMomentTimeGraph
    #                           methods of this class.
    #                           It is important to note that
    #                           this array must be the same length as the 
    #                           "line_colours" and "line_styles" arrays.
    #  @param line_colours      This parameter should be an array of strings
    #                           that dictate the colours to be used for each
    #                           line in the graphs generated by the
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraphAll, 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMeanTimeGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportVarianceTimeGraph
    #                           and
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMomentTimeGraph
    #                           mehods of this class.
    #                           (e.g. this parameter may be set 
    #                           to ["red", "green", "blue", "yellow", 
    #                           "purple", "orange"]).
    #                           It is important to note that
    #                           this array must be the same length as the 
    #                           "line_colours" and "line_styles" arrays.
    #  @param line_styles       This parameter should be an array of strings
    #                           that dictate the style (e.g. dotted, dashed or
    #                           solid) to be used for each
    #                           line in the graphs generated by the
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportDistributionGraphAll, 
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMeanTimeGraph,
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportVarianceTimeGraph
    #                           and
    #                           DistributionDataVisualiser::DistributionDataVisualiser::exportMomentTimeGraph
    #                           mehods of this class.
    #                           (e.g. this parameter may be set 
    #                           to ["-", ":", "--", "-."]). Please see 
    #                           https://matplotlib.org/gallery/lines_bars_and_markers/line_styles_reference.html
    #                           for more details.
    #                           It is important to note that
    #                           this array must be the same length as the 
    #                           "line_colours" and "line_styles" arrays.
    #  @param label_font_size   This parameter must be an integer which is
    #                           >0 and is used to specify the size of the font
    #                           to be used for the axis and legend labels in
    #                           all the graphs produced by this class.
    #  @param title_font_size   This parameter must be an integer which is >0
    #                           and is used to specify the size of
    #                           the font to be used for the title in all
    #                           the graphs produced by this class.
    #  @param data_processor    This parameter must be a valid instance
    #                           of an object of type 
    #                           DistributionDataProcessor::DistributionDataProcessor,
    #                           which encapsulates all simulation data that
    #                           we wish to visualise.
    # @note     It is important to note that if any of the parameters provided
    #           are invalid, then this method will raise an excpetion.
    def __init__(self, x_label, y_label, 
                 key_strings, line_colours, line_styles,
                 label_font_size,
                 title_font_size,
                 data_processor):


        self.__key_strings = key_strings;
        
        if(len(line_colours)!=len(key_strings)):
            raise Exception("The length of the provided line_colours array \
                            does not match the length of the provided \
                            key_strings array.");
        
        self.__line_colours = line_colours;
        
        if(len(line_styles)!=len(key_strings)):
            raise Exception("The length of the provided line_styles array \
                            does not match the length of the provided \
                            key_strings array.");
        
        self.__line_styles = line_styles;

        self.__data_set_amount = len(key_strings); 

        self.__default_x_label = x_label;
        self.__default_y_label = y_label;
        
        self.__label_font_size=label_font_size;
        if(label_font_size<=0):
            raise Exception("The label_font_size parameter must be strictly \
                            greater than 0.");
        
        self.__title_font_size=title_font_size;
        if(title_font_size<=0):
            raise Exception("The title_font_size parameter must be strictly \
                            greater than 0.");
                            
        self.__data_processor = data_processor;
                            
        self.__r_values = self.__data_processor.getRValues();
        self.__t_values = self.__data_processor.getTValues();
    
    
    
    ##  @brief                  This method generates a graph comprised of
    #                           the mean values of each distribution given to
    #                           the constructor of this class at each time
    #                           step in the simulation.
    #   @param figure_num       This parameter should be an integer which is
    #                           >=0 and corresponds to the figure number
    #                           that will be assigned to the graph that will
    #                           be produced by this method.
    #   @param figure_title     This parameter must be a string, which dictates
    #                           the title that will be show on the graph
    #                           produced by this method.
    #   @param x_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the horizonatal
    #                           axis of the graph produced by this method.
    #   @param y_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the vertical
    #                           axis of the graph produced by this method.
    #   @param output_filepath  This parameter must be a string which
    #                           dictates either the relative or absolute path
    #                           to which the graph produced by this method will
    #                           be written to. It is important to note that 
    #                           if the file specified by this parameter 
    #                           already exists then it will be overwritten by
    #                           this method. In addition, if the filepath
    #                           specified by this parameter cannot be written
    #                           to then this method will raise an exception.
    #   @param use_log_scale    This parameter must be a boolean that dictates
    #                           whether the graph produced by this method uses
    #                           a logarithmic scale. If this parameter is set
    #                           to True, then the resulting graph will be use
    #                           a semilog scale and otherwise it will use a
    #                           standard linear scale.
    #   @param auto_scale       This parameter must be a boolean that dictates
    #                           whether the scale on the y-axis of the graph
    #                           produced by this method is chosen dymaically
    #                           or specified manually. If this parameter is set
    #                           to True, then this method will automatically
    #                           choose the y-axis scale and otherwise
    #                           it will be set in accordance with the 
    #                           y_lower_lim and y_upper_lim parameters given
    #                           to this method.
    #   @param y_lower_lim      This parameter must be a number of type double
    #                           which is strictly less than the parameter
    #                           y_upper_lim. This value dictates the lower end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_upper_lim      This parameter must be a number of type double
    #                           which is stictly greater than the parameter
    #                           y_lower_lim. This value dictates the upper end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    def exportMeanTimeGraph(self, figure_num, figure_title, x_axis_label,
                            y_axis_label, output_filepath, use_log_scale,
                            auto_scale, y_lower_lim, y_upper_lim):
        
        mean_values = self.__data_processor.calculateMeanValuesAll();
        
        self.__exportTimeGraph(figure_num, figure_title, x_axis_label,
                               y_axis_label, output_filepath, use_log_scale,
                               auto_scale, y_lower_lim, y_upper_lim, 
                               mean_values);
    
    ##  @brief                  This method generates a graph comprised of
    #                           the variance values of each distribution given
    #                           to the constructor of this class at each time
    #                           step in the simulation.
    #   @param figure_num       This parameter should be an integer which is
    #                           >=0 and corresponds to the figure number
    #                           that will be assigned to the graph that will
    #                           be produced by this method.
    #   @param figure_title     This parameter must be a string, which dictates
    #                           the title that will be show on the graph
    #                           produced by this method.
    #   @param x_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the horizonatal
    #                           axis of the graph produced by this method.
    #   @param y_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the vertical
    #                           axis of the graph produced by this method.
    #   @param output_filepath  This parameter must be a string which
    #                           dictates either the relative or absolute path
    #                           to which the graph produced by this method will
    #                           be written to. It is important to note that 
    #                           if the file specified by this parameter 
    #                           already exists then it will be overwritten by
    #                           this method. In addition, if the filepath
    #                           specified by this parameter cannot be written
    #                           to then this method will raise an exception.
    #   @param use_log_scale    This parameter must be a boolean that dictates
    #                           whether the graph produced by this method uses
    #                           a logarithmic scale. If this parameter is set
    #                           to True, then the resulting graph will be use
    #                           a semilog scale and otherwise it will use a
    #                           standard linear scale.
    #   @param auto_scale       This parameter must be a boolean that dictates
    #                           whether the scale on the y-axis of the graph
    #                           produced by this method is chosen dymaically
    #                           or specified manually. If this parameter is set
    #                           to True, then this method will automatically
    #                           choose the y-axis scale and otherwise
    #                           it will be set in accordance with the 
    #                           y_lower_lim and y_upper_lim parameters given
    #                           to this method.
    #   @param y_lower_lim      This parameter must be a number of type double
    #                           which is strictly less than the parameter
    #                           y_upper_lim. This value dictates the lower end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_upper_lim      This parameter must be a number of type double
    #                           which is stictly greater than the parameter
    #                           y_lower_lim. This value dictates the upper end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    def exportVarianceTimeGraph(self, figure_num, figure_title, x_axis_label,
                                y_axis_label, output_filepath, use_log_scale,
                                auto_scale, y_lower_lim, y_upper_lim):
        
        variance_values = self.__data_processor.calculateVarianceValuesAll();
        
        self.__exportTimeGraph(figure_num, figure_title, x_axis_label,
                               y_axis_label, output_filepath, use_log_scale, 
                               auto_scale, y_lower_lim, y_upper_lim,
                               variance_values);
           
                              
    ##  @brief                  This method generates a graph comprised of
    #                           the values of a specified moment of each 
    #                           distribution given to the constructor of this
    #                           class at each time step in the simulation.
    #   @param moment_number    This parameter must be an integer which is
    #                           strictly greater than zero, which corresponds
    #                           to the moment number that we wish to produce
    #                           a time graph of.
    #   @param figure_num       This parameter should be an integer which is
    #                           >=0 and corresponds to the figure number
    #                           that will be assigned to the graph that will
    #                           be produced by this method.
    #   @param figure_title     This parameter must be a string, which dictates
    #                           the title that will be show on the graph
    #                           produced by this method.
    #   @param x_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the horizontal
    #                           axis of the graph produced by this method.
    #   @param y_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the vertical
    #                           axis of the graph produced by this method.
    #   @param output_filepath  This parameter must be a string which
    #                           dictates either the relative or absolute path
    #                           to which the graph produced by this method will
    #                           be written to. It is important to note that 
    #                           if the file specified by this parameter 
    #                           already exists then it will be overwritten by
    #                           this method. In addition, if the filepath
    #                           specified by this parameter cannot be written
    #                           to then this method will raise an exception.
    #   @param use_log_scale    This parameter must be a boolean that dictates
    #                           whether the graph produced by this method uses
    #                           a logarithmic scale. If this parameter is set
    #                           to True, then the resulting graph will be use
    #                           a semilog scale and otherwise it will use a
    #                           standard linear scale.
    #   @param auto_scale       This parameter must be a boolean that dictates
    #                           whether the scale on the y-axis of the graph
    #                           produced by this method is chosen dymaically
    #                           or specified manually. If this parameter is set
    #                           to True, then this method will automatically
    #                           choose the y-axis scale and otherwise
    #                           it will be set in accordance with the 
    #                           y_lower_lim and y_upper_lim parameters given
    #                           to this method.
    #   @param y_lower_lim      This parameter must be a number of type double
    #                           which is strictly less than the parameter
    #                           y_upper_lim. This value dictates the lower end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_upper_lim      This parameter must be a number of type double
    #                           which is stictly greater than the parameter
    #                           y_lower_lim. This value dictates the upper end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    def exportMomentTimeGraph(self, moment_number, figure_num, figure_title, 
                              x_axis_label, y_axis_label, output_filepath, 
                              use_log_scale, auto_scale, y_lower_lim,
                              y_upper_lim):
        moment_values = self.__data_processor.calculateMomentValuesAll(moment_number);
        
        self.__exportTimeGraph(figure_num, figure_title, x_axis_label,
                               y_axis_label, output_filepath, use_log_scale, 
                               auto_scale, y_lower_lim, y_upper_lim, 
                               moment_values);
        
    
    
    ##  @brief                  This method generates a graph from the 
    #                           time values of the simulation given to the
    #                           constructor of this class along
    #                           the x-axis and a specified array of y values
    #                           along the y-axis.
    #   @param figure_num       This parameter should be an integer which is
    #                           >=0 and corresponds to the figure number
    #                           that will be assigned to the graph that will
    #                           be produced by this method.
    #   @param figure_title     This parameter must be a string, which dictates
    #                           the title that will be show on the graph
    #                           produced by this method.
    #   @param x_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the horizontal
    #                           axis of the graph produced by this method.
    #   @param y_axis_label     This parameter must be a string, which dictates
    #                           the label that will be shown on the vertical
    #                           axis of the graph produced by this method.
    #   @param output_filepath  This parameter must be a string which
    #                           dictates either the relative or absolute path
    #                           to which the graph produced by this method will
    #                           be written to. It is important to note that 
    #                           if the file specified by this parameter 
    #                           already exists then it will be overwritten by
    #                           this method. In addition, if the filepath
    #                           specified by this parameter cannot be written
    #                           to then this method will raise an exception.
    #   @param use_log_scale    This parameter must be a boolean that dictates
    #                           whether the graph produced by this method uses
    #                           a logarithmic scale. If this parameter is set
    #                           to True, then the resulting graph will be use
    #                           a semilog scale and otherwise it will use a
    #                           standard linear scale.
    #   @param auto_scale       This parameter must be a boolean that dictates
    #                           whether the scale on the y-axis of the graph
    #                           produced by this method is chosen dymaically
    #                           or specified manually. If this parameter is set
    #                           to True, then this method will automatically
    #                           choose the y-axis scale and otherwise
    #                           it will be set in accordance with the 
    #                           y_lower_lim and y_upper_lim parameters given
    #                           to this method.
    #   @param y_lower_lim      This parameter must be a number of type double
    #                           which is strictly less than the parameter
    #                           y_upper_lim. This value dictates the lower end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_upper_lim      This parameter must be a number of type double
    #                           which is stictly greater than the parameter
    #                           y_lower_lim. This value dictates the upper end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_values         This parameter must be a multidimensional array
    #                           of size nxm, where n is equal to the number of
    #                           different line colours given to the constructor
    #                           of this class and m is the number of time
    #                           steps in the simulation data gien to the
    #                           constructor of this class. These values
    #                           specify the value of a desired quantity at
    #                           each time step in the simulation that we
    #                           wish to plot on a graph.
    def __exportTimeGraph(self, figure_num, figure_title, x_axis_label,
                          y_axis_label, output_filepath, use_log_scale,
                          auto_scale, y_lower_lim, y_upper_lim, y_values):
        #Work out the maximum and minimum mean values in order to dynamically
        #adjust the axes scale.
        min_y_value = min(list(map(lambda y: min(y), y_values)));
        max_y_value = max(list(map(lambda y: max(y), y_values)));
        
        
        
        #Create a figure to show the data on.
        pylab.figure(figure_num);
        pylab.title(figure_title, fontsize=self.__title_font_size);
        pylab.xlim(min(self.__t_values), max(self.__t_values));

        #Set the y-axis scale        
        if(auto_scale==True):
            pylab.ylim(min_y_value*0.9, max_y_value*1.1);
        else:
            pylab.ylim(y_lower_lim, y_upper_lim);
            
            
        pylab.xlabel(x_axis_label, fontsize=self.__label_font_size);
        pylab.ylabel(y_axis_label, fontsize=self.__label_font_size);
        pylab.tick_params(axis='both', which='major', 
                          labelsize=self.__label_font_size);
        
        for index in range (len(self.__line_colours)):
            pylab.semilogy(self.__t_values, y_values[index], 
                           self.__line_styles[index], 
                           label = self.__key_strings[index], 
                           color = self.__line_colours[index]);
        
        pylab.legend(fontsize = self.__label_font_size);
        pylab.savefig(output_filepath, bbox_inches = 'tight', dpi=300);
        pylab.close(figure_num);
        
        
        
        
    ##  @brief                  This method generates a two dimensional line
    #                           graph of the distributions given to the
    #                           constructor of this class at a particular 
    #                           time step.
    #   @param  time_index      This parameter must be an integer which is >=0
    #                           and is stictly less that the total number of
    #                           timesteps used in the simulation data given
    #                           to the constructor of this class. This 
    #                           parameter dictates the time-step of the
    #                           simulation data, for which we wish to produce
    #                           a graph of distributions given to the
    #                           constructor given to this class.
    #   @param figure_num       This parameter should be an integer which is
    #                           >=0 and corresponds to the figure number
    #                           that will be assigned to the graph that will
    #                           be produced by this method.
    #   @param figure_title     This parameter must be a string, which dictates
    #                           the title that will be show on the graph
    #                           produced by this method.
    #   @param output_filepath  This parameter must be a string which
    #                           dictates either the relative or absolute path
    #                           to which the graph produced by this method will
    #                           be written to. It is important to note that 
    #                           if the file specified by this parameter 
    #                           already exists then it will be overwritten by
    #                           this method. In addition, if the filepath
    #                           specified by this parameter cannot be written
    #                           to then this method will raise an exception.
    #   @param use_log_scale    This parameter must be a boolean that dictates
    #                           whether the graph produced by this method uses
    #                           a logarithmic scale. If this parameter is set
    #                           to True, then the resulting graph will be use
    #                           a semilog scale and otherwise it will use a
    #                           standard linear scale.
    #   @param auto_scale       This parameter must be a boolean that dictates
    #                           whether the scale on the y-axis of the graph
    #                           produced by this method is chosen dymaically
    #                           or specified manually. If this parameter is set
    #                           to True, then this method will automatically
    #                           choose the y-axis scale and otherwise
    #                           it will be set in accordance with the 
    #                           y_lower_lim and y_upper_lim parameters given
    #                           to this method.
    #   @param y_lower_lim      This parameter must be a number of type double
    #                           which is strictly less than the parameter
    #                           y_upper_lim. This value dictates the lower end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    #   @param y_upper_lim      This parameter must be a number of type double
    #                           which is stictly greater than the parameter
    #                           y_lower_lim. This value dictates the upper end
    #                           of the y-axis scale that will be used on the
    #                           graph produced by this method. It is important
    #                           to note that this parameter is only used by
    #                           this method when the auto_scale parameter is
    #                           set to False.
    def exportDistributionGraph(self, time_index, figure_num, figure_title,  
                                output_filepath, use_log_scale, auto_scale, 
                                y_lower_lim, y_upper_lim):
        pylab.figure(figure_num);
        pylab.title(figure_title, fontsize=self.__title_font_size);
        pylab.xlabel(self.__default_x_label, fontsize=self.__label_font_size);
        pylab.ylabel(self.__default_y_label, fontsize=self.__label_font_size);
        pylab.tick_params(axis='both', which='major', labelsize=self.__label_font_size);



        distribution_values=self.__data_processor.getDistributionAll(time_index);

        min_distribution_value = min(
                list(map(lambda x: min(x), distribution_values)));
        max_distribution_value = max(
                list(map(lambda x: max(x), distribution_values)));

        pylab.xlim(min(self.__r_values), max(self.__r_values));
        if(auto_scale):
            pylab.ylim(min_distribution_value*0.9, max_distribution_value*1.1);
        else:
            pylab.ylim(y_lower_lim, y_upper_lim);
            
        for i in range (len(self.__line_colours)):
            if(use_log_scale==True):
                pylab.semilogy(self.__r_values, distribution_values[i],
                               self.__line_styles[i], 
                               label = self.__key_strings[i], 
                               color = self.__line_colours[i]);
            else:
                pylab.plot(self.__r_values, distribution_values[i], 
                           self.__line_styles[i], 
                           label = self.__key_strings[i],
                           color = self.__line_colours[i]);
        
        pylab.legend(fontsize = self.__label_font_size);
        pylab.savefig(output_filepath, bbox_inches = 'tight', dpi=300);
        pylab.close(figure_num);
    
    
    ##  @brief                      This method generates a series of 2D line
    #                               graphs of each of the distributions
    #                               given to the constructor of this class at
    #                               each time step in the simulation.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def exportDistributionGraphAll(self, output_folderpath, 
                                   use_log_scale, auto_scale, y_lower_lim, 
                                   y_upper_lim):
        
        max_n_value = 0;
        min_n_value = 0;
        
        for i in range(len(self.__t_values)):
            current_distribution_values = self.__data_processor.getDistributionAll(i);
            current_min_distribution_value = min(
                    list(map(lambda x: min(x), current_distribution_values)));
            current_max_distribution_value = max(
                    list(map(lambda x: max(x), current_distribution_values)));
            
            
            if(current_min_distribution_value<min_n_value or i==0):
                min_n_value = current_min_distribution_value;
            
            if(current_max_distribution_value>max_n_value or i==0):
                max_n_value = current_max_distribution_value;
            
        if(auto_scale):
            y_lower_lim = min_n_value;
            y_upper_lim = max_n_value+0.1*(max_n_value-min_n_value);
        
        for i in range(len(self.__t_values)):
            current_time = self.__t_values[i];
            
            filepath=output_folderpath+"/"+'/%04d'%i+".png";
            title = 'Time: %3.3f'%(current_time) + ' hours';

            
            self.exportDistributionGraph(i, i, title, filepath, use_log_scale,
                                         False, y_lower_lim, y_upper_lim);
    
    ##  @brief                      This method generates a graph 
    #                               comprised of applying a given function to
    #                               each distribution given to the constructor
    #                               of this class at a specified time step,
    #                               plotted against a custom set
    #                               of x-values (with one for each
    #                               distribution).
    #   @param func                 This parameter must be a valid function
    #                               handle that takes 2 vectors of type double
    #                               (the probability values of a distribution 
    #                               and the event values of of a distribution
    #                               respectively) and returns a value of type
    #                               double. This parameter dictates the
    #                               function that we wish to apply to each of
    #                               distributions given to the constructor of
    #                               this class.
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param figure_num           This parameter must be an integer which
    #                               is >0 that dictates the figure number
    #                               assigned to the graph produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               values in the graphs produced by this
    #                               method.
    #   @param figure_title         This parameter must be a string, which
    #                               dictates the title that will be used in
    #                               the graph produced by this method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_filepath      This parameter must be a string which
    #                               dictates either the relative or absolute
    #                               path to which the graph produced by this
    #                               method will be written to. It is important
    #                               to note that if the file specified by this
    #                               parameter already exists then it will be
    #                               overwritten by this method. In addition,
    #                               if the filepath specified by this parameter
    #                               cannot be written to, then this method 
    #                               will raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    #   @param time_index           This parameter must be an integer which is
    #                               >=0 and dictates which time step in
    #                               the simulation data given to the 
    #                               constructor of this class, that we wish
    #                               to produce a graph for.
    def exportCustomGraph(self, func, line_style, figure_num, x_values, 
                          figure_title, x_axis_label, y_axis_label, 
                          output_filepath, use_log_scale, auto_scale, 
                          y_lower_lim, y_upper_lim, time_index):
        
        raw_data = self.__data_processor.applyFunctionToAll(func);
        
        y_data = raw_data[:,time_index];
        
        pylab.figure(figure_num);
        pylab.title(figure_title, fontsize=self.__title_font_size);
        pylab.xlabel(x_axis_label, fontsize=self.__label_font_size);
        pylab.ylabel(y_axis_label, fontsize=self.__label_font_size);
        pylab.tick_params(axis='both', which='major', 
                          labelsize=self.__label_font_size);

        min_distribution_value = min(y_data);
        max_distribution_value = max(y_data);

        pylab.xlim(min(x_values), max(x_values));
        if(auto_scale):
            pylab.ylim(min_distribution_value*0.9, max_distribution_value*1.1);
        else:
            pylab.ylim(y_lower_lim, y_upper_lim);

           
        if(use_log_scale==True):
            pylab.semilogy(x_values, y_data, line_style);
        else:
            pylab.plot(x_values, y_data, line_style);
        
        pylab.legend(fontsize = self.__label_font_size);
        pylab.savefig(output_filepath, bbox_inches = 'tight', dpi=300);
        pylab.close(figure_num);          
            
        


    ##  @brief                      This method generates a series of graphs 
    #                               (one for each time step in the simulation)
    #                               comprised of the average value of each
    #                               distribution given to the constructor of 
    #                               this class, plotted against a custom set
    #                               of x-values (with one for each
    #                               distribution).
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               means in the graphs produced by this
    #                               method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def exportCustomMeanGraphAll(self, line_style, x_values, x_axis_label, 
                                 y_axis_label, output_folderpath, 
                                 use_log_scale, auto_scale, 
                                 y_lower_lim, y_upper_lim):
        
        raw_data = self.__data_processor.calculateMeanValuesAll();        
        self.__generateCustomGraphAll(raw_data, line_style, x_values, 
                                      x_axis_label, y_axis_label, 
                                      output_folderpath, use_log_scale, 
                                      auto_scale, y_lower_lim, y_upper_lim);


    ##  @brief                      This method generates a series of graphs 
    #                               (one for each time step in the simulation)
    #                               comprised of the variance of each
    #                               distribution given to the constructor of 
    #                               this class, plotted against a custom set
    #                               of x-values (with one for each
    #                               distribution).
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               variances in the graphs produced by this
    #                               method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def exportCustomVarianceGraphAll(self, line_style, x_values, x_axis_label, 
                                     y_axis_label, output_folderpath, 
                                     use_log_scale, auto_scale, y_lower_lim, 
                                     y_upper_lim):
        
        raw_data = self.__data_processor.calculateVarianceValuesAll();        
        self.__generateCustomGraphAll(raw_data, line_style, x_values, 
                                      x_axis_label, y_axis_label, 
                                      output_folderpath, use_log_scale, 
                                      auto_scale, y_lower_lim, y_upper_lim);


    ##  @brief                      This method generates a series of graphs 
    #                               (one for each time step in the simulation)
    #                               comprised of a specified moment of each
    #                               distribution given to the constructor of 
    #                               this class, plotted against a custom set
    #                               of x-values (with one for each
    #                               distribution).
    #   @param moment_number        This parameter must be an integer which is
    #                               >0 and dictates the moment of the
    #                               distributions given to the constructor
    #                               of this class that we wish to plot.
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               moments in the graphs produced by this
    #                               method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def exportCustomMomentGraphAll(self, moment_number, line_style, x_values, 
                                   x_axis_label, y_axis_label, 
                                   output_folderpath, use_log_scale, 
                                   auto_scale, y_lower_lim, y_upper_lim):
        
        raw_data = self.__data_processor.calculateMomentValuesAll(moment_number);        
        self.__generateCustomGraphAll(raw_data, line_style, x_values, 
                                      x_axis_label, y_axis_label,
                                      output_folderpath, use_log_scale,
                                      auto_scale, y_lower_lim, y_upper_lim);



    ##  @brief                      This method generates a series of graphs 
    #                               (one for each time step in the simulation)
    #                               comprised of a applying given function to
    #                               each distribution given to the constructor
    #                               of this class, plotted against a custom set
    #                               of x-values (with one for each
    #                               distribution).
    #   @param func                 This parameter must be a valid function
    #                               handle that takes 2 vectors of type double
    #                               (the probability values of a distribution 
    #                               and the event values of of a distribution
    #                               respectively) and returns a value of type
    #                               double. This parameter dictates the
    #                               function that we wish to apply to each of
    #                               distributions given to the constructor of
    #                               this class.
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               values in the graphs produced by this
    #                               method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def exportCustomGraphAll(self, func, line_style, x_values, x_axis_label,
                             y_axis_label, output_folderpath, use_log_scale,
                             auto_scale, y_lower_lim, y_upper_lim):
        
        raw_data = self.__data_processor.applyFunctionToAll(func);        
        self.__generateCustomGraphAll(raw_data, line_style, x_values, 
                                      x_axis_label, y_axis_label, 
                                      output_folderpath, use_log_scale, 
                                      auto_scale, y_lower_lim, y_upper_lim);



    ##  @brief                      This method generates a series of graphs 
    #                               (one for each time step in the simulation)
    #                               comprised a custom array of values of type
    #                               double for each time step and each r value
    #                               in the simulation, plotted against a custom
    #                               set of x-values (with one for each
    #                               distribution).
    #   @param raw_data             This parameter must be a multidimensional 
    #                               array of type double and size nxm, where
    #                               n is equal to the length of the x_values
    #                               array and m is equal to the number of time
    #                               steps used for each of the distributions
    #                               given to the constructor of this class.
    #                               The [:,j]th entry of this array is a vector
    #                               that dictates the values that we wish to
    #                               plot along the y-axis of the graph produced
    #                               by this method for the ith time step of
    #                               the simulation data.
    #   @param line_style           This parameter should be a non-empty string
    #                               that the style to be used for the line
    #                               on each of the graphs produced by this
    #                               method.
    #   @param x_values             This must be an array of type double that
    #                               is the same length as the key_strings array
    #                               given to the constructor of this class.
    #                               This array dictates the x-values to be used
    #                               for each of the different distribution
    #                               values in the graphs produced by this
    #                               method.
    #   @param x_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on
    #                               the x-axis of all the graphs produced by
    #                               this method.
    #   @param y_axis_label         This parameter must be a string, which
    #                               dictates the label that will be used on the
    #                               y-axis of all the graphs produced by this
    #                               method.
    #   @param output_folderpath    This parameter must be a string, which
    #                               specifies a valid directory (either 
    #                               absolute or relative) on the local
    #                               filesystem. This parameter dictates the
    #                               folder to which all graphs produced
    #                               by this method will be written to.
    #                               It is important to note that if the 
    #                               specified directory does not exist or
    #                               cannot be written to, then this method will
    #                               raise an exception.
    #   @param use_log_scale        This parameter must be a boolean that 
    #                               dictates whether the graphs produced by 
    #                               this method use a logarithmic scale. 
    #                               If this parameter is set to True, then the
    #                               resulting graphs will use a semilog scale
    #                               and otherwise they will use a standard
    #                               linear scale.
    #   @param auto_scale           This parameter must be a boolean that
    #                               dictates whether the scale on the y-axis 
    #                               of the graphs produced by this method is
    #                               chosen dymaically or specified manually.
    #                               If this parameter is set to True, then 
    #                               this method will automatically choose the
    #                               y-axis scale and otherwise it will be set
    #                               in accordance with the y_lower_lim and 
    #                               y_upper_lim parameters given to this 
    #                               method.
    #   @param y_lower_lim          This parameter must be a number of type
    #                               double which is strictly less than the
    #                               parameter y_upper_lim. This value dictates
    #                               the lower end of the y-axis scale that 
    #                               will be used on the graphs produced by 
    #                               this method. It is important to note that
    #                               this parameter is only used by this method
    #                               when the auto_scale parameter is set to 
    #                               False.
    #   @param y_upper_lim          This parameter must be a number of type 
    #                               double which is stictly greater than the
    #                               parameter y_lower_lim. This value dictates
    #                               the upper end of the y-axis scale that will
    #                               be used on the graphs produced by this 
    #                               method. It is important to note that this
    #                               parameter is only used by this method when 
    #                               the auto_scale parameter is set to False.
    def __generateCustomGraphAll(self, raw_data, line_style, x_values, 
                                 x_axis_label, y_axis_label, output_folderpath,
                                 use_log_scale, auto_scale, y_lower_lim,
                                 y_upper_lim):


        max_y_value = max(list(map(lambda x: max(x), raw_data)));
        min_y_value = min(list(map(lambda x: min(x), raw_data)));
        
        if(auto_scale):
            y_lower_lim = min_y_value-(max_y_value-min_y_value)*0.1;
            y_upper_lim = max_y_value+(max_y_value-min_y_value)*0.1;
        
       
        for time_index in range(len(self.__t_values)):
            current_y_data = raw_data[:,time_index];
            current_time = self.__t_values[time_index];
            current_filepath=output_folderpath+"/"+'/%04d'%time_index+".png";
            current_title = 'Time: %3.3f'%(current_time) + ' hours';

        
            pylab.figure(time_index);
            pylab.title(current_title, fontsize=self.__title_font_size);
            pylab.xlabel(x_axis_label, fontsize=self.__label_font_size);
            pylab.ylabel(y_axis_label, fontsize=self.__label_font_size);
            pylab.tick_params(axis='both', which='major',
                              labelsize=self.__label_font_size);

            pylab.xlim(min(x_values), max(x_values));
            pylab.ylim(y_lower_lim, y_upper_lim);

            if(use_log_scale==True):
                pylab.semilogy(x_values, current_y_data, line_style);
            else:
                pylab.plot(x_values, current_y_data, line_style);
        
            pylab.savefig(current_filepath, bbox_inches = 'tight', dpi=300);
            pylab.close(time_index);          